{% extends 'base.html.twig' %}

{% block title %}Créer une nouvelle Commande Fournisseur{% endblock %}

{% block body %}
    <section class="section mt-3">
        <div class="container-fluid">
            <h1 class="mb-3">Créer une nouvelle Commande Fournisseur</h1>

            {{ include('commande_fournisseur/_form.html.twig') }}

            <a href="{{ path('app_commande_fournisseur_index') }}">back to list</a>
        </div>
    </section>
{% endblock %}
{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
    {{ parent() }}

    <script>
        $(document).ready(function() {
            var produitsAjoutesFournisseur = {};
            var i = getCookie('i') || 0;

            // Récupérer les produits ajoutés depuis le cookie, s'il existe
            var produitsAjoutesFournisseurCookie = getCookie('produitsAjoutesFournisseur');
            if (produitsAjoutesFournisseurCookie) {
                produitsAjoutesFournisseur = JSON.parse(produitsAjoutesFournisseurCookie);
            }
            afficherproduitsAjoutesFournisseur();

            // Fonction pour afficher les produits ajoutés dans la table HTML
            function afficherproduitsAjoutesFournisseur() {
                var tableBody = $('#table-produits tbody');
                tableBody.empty(); // Effacer le contenu actuel du corps de la table

                var produitsAjoutesFournisseurCookie = getCookie('produitsAjoutesFournisseur'); // Récupérer la valeur du cookie
                if (produitsAjoutesFournisseurCookie) {
                    produitsAjoutesFournisseur = JSON.parse(produitsAjoutesFournisseurCookie); // Parser les données du cookie en tant qu'objet JavaScript
                }

                for (var produitCode in produitsAjoutesFournisseur) {
                    if (produitsAjoutesFournisseur.hasOwnProperty(produitCode)) {
                        var produit = produitsAjoutesFournisseur[produitCode];

                        var newRow = $('<tr class="table-primary">');
                        newRow.append('<td>' + produitCode + '</td>');
                        newRow.append('<td>' + produit.code + '</td>');
                        newRow.append('<td>' + produit.libelle + '</td>');
                        newRow.append('<td><img style="height: 60px;width: 60px" src="{{ asset('uploads/images/') }}' + produit.image + '" alt="Image du produit"></td>');
                        newRow.append('<td><input type="number" class="quantite-input" id="quantiteInput_' + produitCode + '" required="required" min="1" max="'+ produit.stock +'" style="width: 100px" name="qte'+ produit.id +'" value="'+ produit.qte +'"></td>');
                        newRow.append('<td><input type="date" class="date-input form-control" id="datePeremption_' + produitCode + '" required="required" style="width: 150px" name="datePeremption'+ produit.id +'" value="'+ produit.datePeremption +'"></td>');
                        newRow.append('<td><textarea placeholder="Votre commentaire" id="commentInput_' + produitCode + '" name="comment'+ produit.id +'" class="comment-input form-control">'+ produit.comment +'</textarea></td>');
                        newRow.append('<td><button type="button" class="btn btn-danger delete-row mx-3"><i class="fa fa-trash"></i></button></td>');
                        tableBody.append(newRow);
                    }
                }
            }

            $('#commande_fournisseur_produits').change(function() {
                $.ajax({
                    url: "/dashboard/produit/" + $(this).val(),
                    type: "GET",
                    success: function(data) {
                        var produitId = data.id;
                        //var prix = data.pv;

                        /*if (produitsAjoutesFournisseur.hasOwnProperty(data.code)) {
                            $('#messageProductAdd').text("Ce produit a déjà été ajouté.");
                            // Récupérer le contenu de la div
                            var message = $('#messageProductAdd').text();
                            // Vérifier si la valeur n'est pas vide
                            if(message.trim() !== '') {
                                // Afficher la div
                                $('#messageProductAdd').show();
                            }
                            return;
                        }
                        $('#messageProductAdd').text("");
                        $('#messageProductAdd').hide();*/


                        produitsAjoutesFournisseur[++i] = {
                            id_product: produitId,
                            code: data.code,
                            libelle: data.libelle,
                            stock: data.stock,
                            qte: 1,
                            comment: "",
                            datePeremption: "",
                            image: data.image
                        };
                        // Stocker la valeur mise à jour de 'i' dans le cookie
                        document.cookie = "i=" + JSON.stringify(i)+"; path=/";


                        document.cookie = "produitsAjoutesFournisseur=" + JSON.stringify(produitsAjoutesFournisseur)+"; path=/";
                        audio();

                        // Afficher les produits ajoutés dans la table
                        afficherproduitsAjoutesFournisseur();
                    }
                });
            });

            // Écouteur d'événement pour la modification de la quantité
            $(document).on('input', '.quantite-input', function() {
                var produitCode = $(this).attr('id').split('_')[1]; // Obtenir l'ID du produit à partir de l'attribut id
                var quantite = $(this).val();

                // Mettre à jour la quantité et le total du produit correspondant
                produitsAjoutesFournisseur[produitCode].qte = quantite;
                //produitsAjoutesFournisseur[produitCode].total = quantite * produitsAjoutesFournisseur[produitCode].prix;

                document.cookie = "produitsAjoutesFournisseur=" + JSON.stringify(produitsAjoutesFournisseur)+"; path=/";

                // Mettre à jour les cellules de quantité et de total dans la table
                $('.total-cell', $(this).closest('tr')).text(produitsAjoutesFournisseur[produitCode].total);
            });

            // Écouteur d'événement pour la modification du commentaire
            $(document).on('input', '.comment-input', function() {
                var produitCode = $(this).attr('id').split('_')[1]; // Obtenir l'ID du produit à partir de l'attribut id
                var commentaire = $(this).val();

                // Mettre à jour le commentaire du produit correspondant
                produitsAjoutesFournisseur[produitCode].comment = commentaire;

                document.cookie = "produitsAjoutesFournisseur=" + JSON.stringify(produitsAjoutesFournisseur)+"; path=/";
            });

            // Écouteur d'événement pour la modification de la date de péremption
            $(document).on('input', '.date-input', function() {
                var produitCode = $(this).attr('id').split('_')[1]; // Obtenir l'ID du produit à partir de l'attribut id
                var datePeremption = $(this).val();

                // Mettre à jour le commentaire du produit correspondant
                produitsAjoutesFournisseur[produitCode].datePeremption = datePeremption;

                document.cookie = "produitsAjoutesFournisseur=" + JSON.stringify(produitsAjoutesFournisseur)+"; path=/";
            });

            // Gestionnaire d'événements pour la suppression d'une ligne de produit
            $(document).on('click', '.delete-row', function() {
                var row = $(this).closest('tr');
                var produitCode = row.find('td:first').text();

                // Supprimer le produit du tableau produitsAjoutesFournisseur
                delete produitsAjoutesFournisseur[produitCode];

                // Retirer le produit du cookie
                var produitsAjoutesFournisseurCookie = JSON.parse(getCookie("produitsAjoutesFournisseur"));
                delete produitsAjoutesFournisseurCookie[produitCode];
                document.cookie = "produitsAjoutesFournisseur=" + JSON.stringify(produitsAjoutesFournisseurCookie) + "; path=/";
                // Supprimer la ligne de la table
                row.remove();
            });
        });

        function getCookie(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length === 2) return parts.pop().split(";").shift();
        }

        function audio() {
            const audio = new Audio('{{ asset("audio/notif.mp3") }}');
            audio.addEventListener('canplaythrough', () => {
                audio.play();
            });
        }
    </script>
{% endblock %}
